#!/usr/bin/env node

const app = require('../app')
const http = require('http')

const port = normalizePort(process.env.PORT || '3000')
app.set('port', port)

var server = http.createServer(app)

server.listen(port, () => {
    var addr = server.address()
    var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port
    console.log(`Listening on http://localhost:${port}, ${bind}`);
})

server.on('error', error => {
    if (error.syscall !== 'listen') throw error
    var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port

    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges')
            process.exit(1)
            break
        case 'EADDRINUSE':
            console.error(bind + ' is already in use')
            process.exit(1)
            break
        default:
            throw error
    }
})

function normalizePort(val) {
    var port = parseInt(val, 10)
    if (isNaN(port)) return val
    if (port >= 0) return port
    return false
}